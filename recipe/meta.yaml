{% set processor = "cpu" %}
{% set version = "2.0" %}
{% set build = 8 %}

{% set processor = "cpu" if cuda_compiler_version == "None" else "gpu" %}  # [not osx]
{% set processor = "cpu" %}  # [osx]

# Prioritize gpu build if cudatoolkit can be installed (through __cuda virtual package)
{% set build = build + 100 if processor == "gpu" else build %}

package:
  name: prismatic_split
  version: {{ version }}

source:
  url: https://github.com/prism-em/prismatic/archive/v{{ version }}.tar.gz
  sha256: a568878462996160869456f2fcc721e1722322a4192e3dd9c6d80af2245072e7
  patches:
    - 0001-Fix-compilation-error-with-clang-macos-implicit-conv.patch

build:
  number: {{ build }}
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [not osx and cuda_compiler_version != "None"]
    - {{ cdt('libxext-devel') }}         # [linux]
    - {{ cdt('mesa-libgl-devel') }}      # [linux]
    - {{ cdt('mesa-dri-drivers') }}      # [linux]
    - {{ cdt('libxau-devel') }}          # [linux]
    - {{ cdt('libselinux-devel') }}      # [linux]
    - {{ cdt('libxdamage') }}            # [linux]
    - {{ cdt('libxfixes') }}             # [linux]
    - {{ cdt('libxxf86vm') }}            # [linux]
    - make                               # [unix]
    - ninja                              # [win]
    - cmake
    - pkg-config


outputs:
  - name: prismatic
    build:
      number: {{ build }}
      skip: true  # [py2k]
      string: {{ processor }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}
    requirements:
      host:
        - python
      run:
        - {{ pin_subpackage('prismatic_cli', exact=True) }}
        - {{ pin_subpackage('prismatic_gui', exact=True) }}
        - {{ pin_subpackage('pyprismatic', exact=True) }}

    test:
      commands:
        - command -v prismatic-gui  # [linux64 and cuda_compiler_version == "None"]
        - test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui  # [osx]
        - where prismatic-gui  # [win and cuda_compiler_version == "None"]
        - where prismatic  # [win and cuda_compiler_version == "None"]
        - python -c "import pyprismatic; pyprismatic.demo()"  # [not osx and cuda_compiler_version == "None"]

  - name: prismatic_cli
    build:
      string: {{ processor }}_h{{ PKG_HASH }}_{{ build }}
      script: bash ${RECIPE_DIR}/combined_build_install.sh cli  # [not win]
      script: {{ RECIPE_DIR }}\build.bat cli  # [win]

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}  # [not osx and cuda_compiler_version != "None"]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libxdamage') }}            # [linux]
        - {{ cdt('libxfixes') }}             # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - make                               # [unix]
        - ninja                              # [win]
        - cmake
        - pkg-config
      host:
        - libboost-headers
        - hdf5
        - fftw
      run:
        - hdf5
        - fftw
        - __cuda  # [not osx and cuda_compiler_version != "None"]
      ignore_run_exports:
        - libboost-headers

    test:
      source_files:
        - SI100.XYZ
      commands:
        - prismatic -i SI100.XYZ  # [(not osx and cuda_compiler_version == "None") or osx]
        - prismatic-double -i SI100.XYZ  # [(not osx and cuda_compiler_version == "None") or osx]

  - name: prismatic_gui
    build:
      string: {{ processor }}_h{{ PKG_HASH }}_{{ build }}
      script: bash ${RECIPE_DIR}/combined_build_install.sh gui  # [not win]
      script: {{ RECIPE_DIR }}\build.bat gui  # [win]

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}  # [not osx and cuda_compiler_version != "None"]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libxdamage') }}            # [linux]
        - {{ cdt('libxfixes') }}             # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - make                               # [unix]
        - ninja                              # [win]
        - cmake
        - pkg-config
      host:
        - libboost-headers
        - hdf5
        - fftw
        - qt
      run:
        - hdf5
        - fftw
        - qt
        - __cuda  # [not osx and cuda_compiler_version != "None"]
      run_constrained:
        - menuinst >=1.4.17
      ignore_run_exports:
        - libboost-headers

    test:
      commands:
        - command -v prismatic-gui  # [linux64 and cuda_compiler_version == "None"]
        - test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui  # [osx]
        - where prismatic-gui  # [win and cuda_compiler_version == "None"]
        - if not exist %PREFIX%\\Menu\\prismatic_gui.json exit 1  # [win and cuda_compiler_version == "None"]
        - if not exist %PREFIX%\\Menu\\prismatic.ico exit 1  # [win and cuda_compiler_version == "None"]

  - name: pyprismatic
    build:
      skip: true  # [py2k]
      string: {{ processor }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}
      script: bash ${RECIPE_DIR}/build_pyprismatic.sh gpu  # [linux64 and cuda_compiler_version != "None"]
      script: bash ${RECIPE_DIR}/build_pyprismatic.sh  # [(linux64 and cuda_compiler_version == "None") or osx]
      script: {{ RECIPE_DIR }}\build_pyprismatic.bat  # [win]

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}  # [not osx and cuda_compiler_version != "None"]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libxdamage') }}            # [linux]
        - {{ cdt('libxfixes') }}             # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - make                               # [unix]
        - ninja                              # [win]
        - cmake
        - pkg-config
      host:
        - setuptools
        - python
        - libboost-python-devel
        - hdf5
        - fftw
        - h5py
      run:
        - fftw
        - h5py
        - numpy
        - python
        - scipy
        - __cuda  # [not osx and cuda_compiler_version != "None"]
      ignore_run_exports:
        - libboost-python-devel

    test:
      commands:
        - python -c "import pyprismatic; pyprismatic.demo()"  # [(not osx and cuda_compiler_version == "None") or osx]

about:
  home: http://prism-em.com/
  license: GPL-3.0-only
  license_file: LICENSE
  summary: CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments
  description: |
    CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments
  dev_url: https://github.com/prism-em/prismatic

extra:
  recipe-maintainers:
    - ericpre
    - douglowe
    - tschoonj
